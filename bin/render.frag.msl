#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct uniformRules
{
    uint seed;
    uint surviveMask;
    uint birthMask;
    uint life;
    uint neighborhood;
    uint frame;
};

struct main0_out
{
    float4 outColor [[color(0)]];
};

struct main0_in
{
    uint inValue [[user(locn0)]];
};

fragment main0_out main0(main0_in in [[stage_in]], constant uniformRules& _27 [[buffer(0)]])
{
    main0_out out = {};
    float3 color1 = float3(1.0, 1.0, 0.0);
    float3 color2 = float3(1.0, 0.0, 1.0);
    out.outColor = float4(mix(color1, color2, float3(float(in.inValue) / float(_27.life))), 1.0);
    return out;
}

