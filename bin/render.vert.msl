#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct uniformViewProjMatrix
{
    float4x4 viewProjMatrix;
};

struct main0_out
{
    int3 outInstance [[user(locn0)]];
    float4 gl_Position [[position]];
};

struct main0_in
{
    float3 inPosition [[attribute(0)]];
    uint inInstance [[attribute(1)]];
};

vertex main0_out main0(main0_in in [[stage_in]], constant uniformViewProjMatrix& _57 [[buffer(0)]], texture3d<uint> cells [[texture(0)]])
{
    main0_out out = {};
    out.outInstance.x = int((in.inInstance >> uint(0)) & 1023u);
    out.outInstance.y = int((in.inInstance >> uint(10)) & 1023u);
    out.outInstance.z = int((in.inInstance >> uint(20)) & 1023u);
    if (cells.read(uint3(out.outInstance)).x > 0u)
    {
        out.gl_Position = _57.viewProjMatrix * float4(in.inPosition + float3(out.outInstance), 1.0);
    }
    else
    {
        out.gl_Position = float4(0.0, 0.0, 0.0, 1.0);
    }
    return out;
}

